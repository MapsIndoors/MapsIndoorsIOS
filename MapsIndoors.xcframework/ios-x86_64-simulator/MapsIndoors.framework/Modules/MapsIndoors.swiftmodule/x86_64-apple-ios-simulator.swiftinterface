// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target x86_64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MapsIndoors
@_exported import MapsIndoors
import MapsIndoors_Private
import Swift
import _Concurrency
@objc @_inheritsConvenienceInitializers @objcMembers public class MPDisplayRuleManager : ObjectiveC.NSObject {
  @objc public static let sharedInstance: MapsIndoors.MPDisplayRuleManager
  @objc public var defaultDisplayRule: MapsIndoors.MPLocationDisplayRule? {
    @objc get
    @objc set
  }
  @objc public func getDisplayRuleFor(location: MapsIndoors.MPLocation) -> MapsIndoors.MPLocationDisplayRule?
  @objc public func getDisplayRuleForTypeName(_ name: Swift.String?) -> MapsIndoors.MPLocationDisplayRule?
  @objc public func getEffectiveDisplayRuleFor(location: MapsIndoors.MPLocation) -> MapsIndoors.MPLocationDisplayRule?
  @objc public func removeDisplayRuleForTypeName(_ name: Swift.String?) -> MapsIndoors.MPLocationDisplayRule?
  @objc public func resetDisplayRuleForLocation(_ location: MapsIndoors.MPLocation) -> MapsIndoors.MPLocationDisplayRule?
  @objc public func resolveDisplayRuleForLocation(_ location: MapsIndoors.MPLocation) -> MapsIndoors.MPLocationDisplayRule
  @objc public func setDisplayRule(_ displayRule: MapsIndoors.MPLocationDisplayRule, forLocation location: MapsIndoors.MPLocation) -> Swift.Bool
  @objc public func setDisplayRule(_ displayRule: MapsIndoors.MPLocationDisplayRule, forLocationId locationId: Swift.String) -> Swift.Bool
  @objc public func setDisplayRule(_ displayRule: MapsIndoors.MPLocationDisplayRule, forTypeName name: Swift.String?)
  @objc override dynamic public init()
  @objc deinit
}

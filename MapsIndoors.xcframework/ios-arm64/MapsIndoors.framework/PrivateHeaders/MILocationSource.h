// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from LocationInterface.djinni

#import "MILocation.h"
#import "MILocationSourceStatus.h"
#import <Foundation/Foundation.h>
@protocol MILocationsObserver;


/**
 * The `LocationSource` interface is used as a way to inject external `Location` data into MapsIndoors, to be displayed on a map or returned in a search. A implementation of a Location Source can be registered using `MapsIndoors.registerLocationSources()`. ;
 * When Location Sources are registered, all existing Sources are unsubscribed and removed. If a custom Location Source should add locations along with existing Source(s), the existing Sources must be added as well. `MapsIndoorsLocationSource` is the default Location Source that provide all MapsIndoors locations.;
 */
@protocol MILocationSource

/** A synchronous method to get the current set of locations from the source; */
- (nonnull NSArray<MILocation *> *)getLocations;

/** Add an observer to the location source to get notified of changes (updates and deletes) to the list of locations, as well as status changes.; */
- (void)addLocationsObserver:(nullable id<MILocationsObserver>)observer;

/** Remove an observer from the location source; */
- (void)removeLocationsObserver:(nullable id<MILocationsObserver>)observer;

/** Get the current status of the location source; */
- (MILocationSourceStatus)status;

/** Get the id of the location source; */
- (int32_t)sourceId;

@end
